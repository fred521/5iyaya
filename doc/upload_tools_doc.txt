1. 产品格式以及输入相关: 录入人员按照产品输入标准V1.0(excel文件), 输入完全后, 另存为csv格式
example:  店主登录ID,产品图片,是否主图片(将生成大小图)...,
          ###,a,...,
          ###,b,...,
          ###,...,...,
图片路径存放规则:
                         店主登录ID
                   --产品款号#(唯一)
                         --a.jpg
                         --b.jpg
                         --c.jpg
                   ...
                         --a.jpg
                         --b.jpg
2. python 脚本开发:输入参数: cvs产品数据包路径; 产品图片数据包路径
根据cvs的店主登录ID, 以及产品标识a等生成32位UUID做为产品的唯一ID预备放入goods_base_info;
根据cvs的店主登录ID, 以及产品标识a等生成32位UUID做为产品图片的唯一ID预备放入picture_info;
根据cvs的店主登录ID, 以及是否主图片生成大小两张图片, 路径参数预备放入goods_base_info; 其他同店铺下面的同款产品图片都 将放入picture_info;
3. 通过python脚本将录入人员的cvs文件另外生成一份带有产品UUID的cvs数据包, 以及python调用imageMagick将图片进行相应的处理(加水印, 生成必要的大小图)
4. 登录到系统后台, 到相应的数据包上传页面, 按照提示(先生成图片路径: for example: 200903; 再上传图片), 最后上传数据包;
comments:
操作人员用ftp工具上传到指定的文件夹(按当月的月份为准),产品图片为tar的压缩包上传, 上传完毕后, 操作员按照提示去解压tar文件, 解压完成之后, 将tar文件移到相应的图片备份区
基本原理: java调用linux脚本, 按照信息传送来告知录入人员是否已经解压完成.
5. 整体测试...

*技术难点: python打包, java调用linux脚本





